{
  "private": true,
  "scripts": {
    "start": "run-s start:lib:protoc-gen-ng",
    "start:lib:protoc-gen-ng": "nodemon --watch packages/protoc-gen-ng/src --watch packages/protoc-gen-ng/test/proto -e ts,proto --exec 'npm run build:lib:protoc-gen-ng && npm run test:lib:protoc-gen-ng:generate && npm run test:lib:protoc-gen-ng:generate-grpc-web && echo \"Done\"'",
    "build": "run-s build:lib",
    "build:lib": "run-s build:lib:common build:lib:core build:lib:grpc-web-client build:lib:improbable-eng-grpc-web-client build:lib:worker build:lib:worker-client build:lib:protoc-gen-ng build:lib:well-known-types",
    "build:lib:core": "ng build core --prod && cpy LICENSE.md dist/core/",
    "build:lib:common": "ng build common --prod && cpy LICENSE.md dist/common/",
    "build:lib:grpc-web-client": "ng build grpc-web-client --prod && cpy LICENSE.md dist/grpc-web-client/",
    "build:lib:improbable-eng-grpc-web-client": "ng build improbable-eng-grpc-web-client --prod && cpy LICENSE.md dist/improbable-eng-grpc-web-client/",
    "build:lib:worker": "ng build worker --prod && cpy LICENSE.md dist/worker/",
    "build:lib:worker-client": "ng build worker-client --prod && cpy LICENSE.md dist/worker-client/",
    "build:lib:protoc-gen-ng": "cd packages/protoc-gen-ng && rimraf ../../dist/protoc-gen-ng && tsc -p tsconfig.build.json && chmod +x ../../dist/protoc-gen-ng/main.js && cpy package.json ../../dist/protoc-gen-ng/ && cpy ../../LICENSE.md ../../dist/protoc-gen-ng/ && cpy README.md ../../dist/protoc-gen-ng/",
    "build:lib:well-known-types": "ng build well-known-types --prod && cpy LICENSE.md dist/well-known-types/",
    "build:lib:well-known-types:generate": "rimraf packages/well-known-types/src/lib/* && $(pwd)/node_modules/.bin/grpc_tools_node_protoc --plugin=protoc-gen-ng=$(pwd)/dist/protoc-gen-ng/main.js --ng_out=config=packages/well-known-types/ngx-grpc.conf.js:./packages/well-known-types/src/lib packages/well-known-types/generate.proto && rimraf packages/well-known-types/src/lib/packages",
    "test": "run-s test:lib:protoc-gen-ng",
    "test:lib": "run-s test:lib:common test:lib:core test:lib:worker test:lib:worker-client test:lib:protoc-gen-ng",
    "test:lib:common": "ng test common --watch=false --progress=false --browsers=ChromeHeadlessCI --code-coverage",
    "test:lib:core": "ng test core --watch=false --progress=false --browsers=ChromeHeadlessCI --code-coverage",
    "test:lib:worker": "ng test worker --watch=false --progress=false --browsers=ChromeHeadlessCI --code-coverage",
    "test:lib:worker-client": "ng test worker-client --watch=false --progress=false --browsers=ChromeHeadlessCI --code-coverage",
    "test:lib:protoc-gen-ng": "jest -c packages/protoc-gen-ng/jest.config.js",
    "test:lib:protoc-gen-ng:watch": "jest -c packages/protoc-gen-ng/jest.config.js --watchAll",
    "test:lib:protoc-gen-ng:generate": "cd packages/protoc-gen-ng && mkdir -p ./test/out && rimraf ./test/out/* && $(pwd)/../../node_modules/.bin/grpc_tools_node_protoc --plugin=protoc-gen-ng=$(pwd)/../../dist/protoc-gen-ng/main.js --ng_out=config=./ngx-grpc.conf.js:./test/out -I test/proto $(find test/proto -iname \"*.proto\")",
    "test:lib:protoc-gen-ng:generate-grpc-web": "cd packages/protoc-gen-ng && mkdir -p ./test/out-grpc-web && rimraf ./test/out-grpc-web/* && $(pwd)/../../node_modules/.bin/grpc_tools_node_protoc --plugin=protoc-gen-grpc=$(pwd)/../..node_modules/.bin/protoc_gen_grpc_web -I=test/proto --js_out=import_style=commonjs:test/out-grpc-web --grpc-web_out=import_style=commonjs+dts,mode=grpcweb:test/out-grpc-web $(find test/proto -iname \"*.proto\")",
    "lint": "ng lint && npm run lint:lib:protoc-gen-ng",
    "lint:lib:protoc-gen-ng": "tslint -c tslint.json -e 'packages/protoc-gen-ng/test/**/*.ts' 'packages/protoc-gen-ng/**/*.ts'",
    "release": "semantic-release",
    "examples": "run-p examples:basic examples:backend",
    "examples:basic": "ng serve basic-example --port 4200",
    "examples:backend": "docker-compose -f examples/backend/docker-compose.yaml down && docker-compose -f examples/backend/docker-compose.yaml up --remove-orphans --build",
    "examples:backend:no-proxy": "cd examples/backend && npm start",
    "examples:proto:generate": "run-s examples:proto:generate-backend examples:proto:generate-basic",
    "examples:proto:generate-basic": "mkdir -p examples/basic-example/src/proto && rm -rf examples/basic-example/src/proto/* && $(pwd)/node_modules/.bin/grpc_tools_node_protoc --plugin=protoc-gen-ng=$(pwd)/dist/protoc-gen-ng/main.js --ng_out=config=examples/basic-example/ngx-grpc.conf.js:examples/basic-example/src/proto -I examples/proto $(find examples/proto -iname \"*.proto\")",
    "examples:proto:generate-backend": "cd examples/backend && npm run proto:generate"
  },
  "dependencies": {
    "google-protobuf": "3.15.8",
    "grpc-web": "1.2.1",
    "rxjs": "6.6.3",
    "tslib": "2.0.0",
    "zone.js": "0.10.3"
  },
  "devDependencies": {
    "@semantic-release/changelog": "5.0.1",
    "@semantic-release/commit-analyzer": "8.0.1",
    "@semantic-release/exec": "5.0.0",
    "@semantic-release/git": "9.0.0",
    "@semantic-release/release-notes-generator": "9.0.1",
    "@types/google-protobuf": "3.15.2",
    "@types/jasmine": "3.6.0",
    "@types/jasminewd2": "2.0.3",
    "@types/jest": "26.0.15",
    "@types/node": "12.19.2",
    "@types/prettier": "2.1.5",
    "codelyzer": "6.0.0",
    "cpy-cli": "3.1.1",
    "grpc-tools": "1.11.1",
    "jasmine-core": "3.6.0",
    "jasmine-spec-reporter": "5.0.0",
    "jest": "26.6.1",
    "karma": "5.1.1",
    "karma-chrome-launcher": "3.1.0",
    "karma-coverage-istanbul-reporter": "3.0.2",
    "karma-jasmine": "4.0.0",
    "karma-jasmine-html-reporter": "1.5.0",
    "ng-packagr": "11.0.3",
    "nodemon": "2.0.7",
    "npm-run-all": "4.1.5",
    "prettier": "2.3.2",
    "protoc-gen-grpc-web": "1.2.1",
    "protractor": "7.0.0",
    "rimraf": "3.0.2",
    "semantic-release": "17.4.4",
    "typescript": "4.3.4",
    "winston": "3.3.3"
  },
  "workspaces": [
    "examples/front",
    "examples/back",
    "packages/*"
  ]
}
