{"version":3,"file":"struct.pb.js","sourceRoot":"","sources":["../../../src/google/protobuf/struct.pb.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions,\n} from '@metabreak/grpc-common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nexport enum NullValue {\n  NULL_VALUE = 0,\n}\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class Struct implements GrpcMessage {\n  static id = 'google.protobuf.Struct';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Struct();\n    Struct.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Struct) {\n    _instance.fields = _instance.fields || {};\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Struct, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const msg_1 = {} as any;\n          _reader.readMessage(\n            msg_1,\n            Struct.FieldsEntry.deserializeBinaryFromReader\n          );\n          _instance.fields = _instance.fields || {};\n          _instance.fields[msg_1.key] = msg_1.value;\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Struct.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Struct, _writer: BinaryWriter) {\n    if (!!_instance.fields) {\n      const keys_1 = Object.keys(_instance.fields as any);\n\n      if (keys_1.length) {\n        const repeated_1 = keys_1\n          .map((key) => ({ key: key, value: (_instance.fields as any)[key] }))\n          .reduce((r, v) => [...r, v], [] as any[]);\n\n        _writer.writeRepeatedMessage(\n          1,\n          repeated_1,\n          Struct.FieldsEntry.serializeBinaryToWriter\n        );\n      }\n    }\n  }\n\n  private _fields?: { [prop: string]: Value };\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Struct to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Struct.AsObject>) {\n    _value = _value || {};\n    (this.fields = _value!.fields\n      ? Object.keys(_value!.fields).reduce(\n          (r, k) => ({\n            ...r,\n            [k]: _value!.fields![k] ? new Value(_value!.fields![k]) : undefined,\n          }),\n          {}\n        )\n      : {}),\n      Struct.refineValues(this);\n  }\n  get fields(): { [prop: string]: Value } | undefined {\n    return this._fields;\n  }\n  set fields(value: { [prop: string]: Value } | undefined) {\n    this._fields = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Struct.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Struct.AsObject {\n    return {\n      fields: this.fields\n        ? Object.keys(this.fields).reduce(\n            (r, k) => ({\n              ...r,\n              [k]: this.fields![k] ? this.fields![k].toObject() : undefined,\n            }),\n            {}\n          )\n        : {},\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Struct.AsProtobufJSON {\n    return this.fields\n      ? Object.keys(this.fields).reduce(\n          (r, k) => ({\n            ...r,\n            [k]: this.fields![k] ? this.fields![k].toProtobufJSON(options) : {},\n          }),\n          {}\n        )\n      : {};\n  }\n}\nexport module Struct {\n  /**\n   * Standard JavaScript object representation for Struct\n   */\n  export interface AsObject {\n    fields?: { [prop: string]: Value };\n  }\n\n  /**\n   * Protobuf JSON representation for Struct\n   */\n  export type AsProtobufJSON = { [prop: string]: Value.AsProtobufJSON };\n\n  /**\n   * Message implementation for google.protobuf.FieldsEntry\n   */\n  export class FieldsEntry implements GrpcMessage {\n    static id = 'google.protobuf.FieldsEntry';\n\n    /**\n     * Deserialize binary data to message\n     * @param instance message instance\n     */\n    static deserializeBinary(bytes: ByteSource) {\n      const instance = new FieldsEntry();\n      FieldsEntry.deserializeBinaryFromReader(\n        instance,\n        new BinaryReader(bytes)\n      );\n      return instance;\n    }\n\n    /**\n     * Check all the properties and set default protobuf values if necessary\n     * @param _instance message instance\n     */\n    static refineValues(_instance: FieldsEntry) {\n      _instance.key = _instance.key || '';\n      _instance.value = _instance.value || undefined;\n    }\n\n    /**\n     * Deserializes / reads binary message into message instance using provided binary reader\n     * @param _instance message instance\n     * @param _reader binary reader instance\n     */\n    static deserializeBinaryFromReader(\n      _instance: FieldsEntry,\n      _reader: BinaryReader\n    ) {\n      while (_reader.nextField()) {\n        if (_reader.isEndGroup()) break;\n\n        switch (_reader.getFieldNumber()) {\n          case 1:\n            _instance.key = _reader.readString();\n            break;\n          case 2:\n            _instance.value = new Value();\n            _reader.readMessage(\n              _instance.value,\n              Value.deserializeBinaryFromReader\n            );\n            break;\n          default:\n            _reader.skipField();\n        }\n      }\n\n      FieldsEntry.refineValues(_instance);\n    }\n\n    /**\n     * Serializes a message to binary format using provided binary reader\n     * @param _instance message instance\n     * @param _writer binary writer instance\n     */\n    static serializeBinaryToWriter(\n      _instance: FieldsEntry,\n      _writer: BinaryWriter\n    ) {\n      if (_instance.key) {\n        _writer.writeString(1, _instance.key);\n      }\n      if (_instance.value) {\n        _writer.writeMessage(\n          2,\n          _instance.value as any,\n          Value.serializeBinaryToWriter\n        );\n      }\n    }\n\n    private _key?: string;\n    private _value?: Value;\n\n    /**\n     * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n     * @param _value initial values object or instance of FieldsEntry to deeply clone from\n     */\n    constructor(_value?: RecursivePartial<FieldsEntry.AsObject>) {\n      _value = _value || {};\n      this.key = _value.key;\n      this.value = _value.value ? new Value(_value.value) : undefined;\n      FieldsEntry.refineValues(this);\n    }\n    get key(): string | undefined {\n      return this._key;\n    }\n    set key(value: string | undefined) {\n      this._key = value;\n    }\n    get value(): Value | undefined {\n      return this._value;\n    }\n    set value(value: Value | undefined) {\n      this._value = value;\n    }\n\n    /**\n     * Serialize message to binary data\n     * @param instance message instance\n     */\n    serializeBinary() {\n      const writer = new BinaryWriter();\n      FieldsEntry.serializeBinaryToWriter(this, writer);\n      return writer.getResultBuffer();\n    }\n\n    /**\n     * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n     */\n    toObject(): FieldsEntry.AsObject {\n      return {\n        key: this.key,\n        value: this.value ? this.value.toObject() : undefined,\n      };\n    }\n\n    /**\n     * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n     */\n    toJSON() {\n      return this.toObject();\n    }\n\n    /**\n     * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n     * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n     * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n     */\n    toProtobufJSON(\n      // @ts-ignore\n      options?: ToProtobufJSONOptions\n    ): FieldsEntry.AsProtobufJSON {\n      return {\n        key: this.key,\n        value: this.value ? this.value.toProtobufJSON(options) : null,\n      };\n    }\n  }\n  export module FieldsEntry {\n    /**\n     * Standard JavaScript object representation for FieldsEntry\n     */\n    export interface AsObject {\n      key?: string;\n      value?: Value.AsObject;\n    }\n\n    /**\n     * Protobuf JSON representation for FieldsEntry\n     */\n    export interface AsProtobufJSON {\n      key?: string;\n      value?: Value.AsProtobufJSON | null;\n    }\n  }\n}\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class Value implements GrpcMessage {\n  static id = 'google.protobuf.Value';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Value();\n    Value.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Value) {}\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Value, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.nullValue = _reader.readEnum();\n          break;\n        case 2:\n          _instance.numberValue = _reader.readDouble();\n          break;\n        case 3:\n          _instance.stringValue = _reader.readString();\n          break;\n        case 4:\n          _instance.boolValue = _reader.readBool();\n          break;\n        case 5:\n          _instance.structValue = new Struct();\n          _reader.readMessage(\n            _instance.structValue,\n            Struct.deserializeBinaryFromReader\n          );\n          break;\n        case 6:\n          _instance.listValue = new ListValue();\n          _reader.readMessage(\n            _instance.listValue,\n            ListValue.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Value.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Value, _writer: BinaryWriter) {\n    if (_instance.nullValue || _instance.nullValue === 0) {\n      _writer.writeEnum(1, _instance.nullValue);\n    }\n    if (_instance.numberValue || _instance.numberValue === 0) {\n      _writer.writeDouble(2, _instance.numberValue);\n    }\n    if (_instance.stringValue || _instance.stringValue === '') {\n      _writer.writeString(3, _instance.stringValue);\n    }\n    if (_instance.boolValue || _instance.boolValue === false) {\n      _writer.writeBool(4, _instance.boolValue);\n    }\n    if (_instance.structValue) {\n      _writer.writeMessage(\n        5,\n        _instance.structValue as any,\n        Struct.serializeBinaryToWriter\n      );\n    }\n    if (_instance.listValue) {\n      _writer.writeMessage(\n        6,\n        _instance.listValue as any,\n        ListValue.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _nullValue?: NullValue;\n  private _numberValue?: number;\n  private _stringValue?: string;\n  private _boolValue?: boolean;\n  private _structValue?: Struct;\n  private _listValue?: ListValue;\n\n  private _kind: Value.KindCase = Value.KindCase.none;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Value to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Value.AsObject>) {\n    _value = _value || {};\n    this.nullValue = _value.nullValue;\n    this.numberValue = _value.numberValue;\n    this.stringValue = _value.stringValue;\n    this.boolValue = _value.boolValue;\n    this.structValue = _value.structValue\n      ? new Struct(_value.structValue)\n      : undefined;\n    this.listValue = _value.listValue\n      ? new ListValue(_value.listValue)\n      : undefined;\n    Value.refineValues(this);\n  }\n  get nullValue(): NullValue | undefined {\n    return this._nullValue;\n  }\n  set nullValue(value: NullValue | undefined) {\n    if (value !== undefined && value !== null) {\n      this._numberValue =\n        this._stringValue =\n        this._boolValue =\n        this._structValue =\n        this._listValue =\n          undefined;\n      this._kind = Value.KindCase.nullValue;\n    }\n    this._nullValue = value;\n  }\n  get numberValue(): number | undefined {\n    return this._numberValue;\n  }\n  set numberValue(value: number | undefined) {\n    if (value !== undefined && value !== null) {\n      this._nullValue =\n        this._stringValue =\n        this._boolValue =\n        this._structValue =\n        this._listValue =\n          undefined;\n      this._kind = Value.KindCase.numberValue;\n    }\n    this._numberValue = value;\n  }\n  get stringValue(): string | undefined {\n    return this._stringValue;\n  }\n  set stringValue(value: string | undefined) {\n    if (value !== undefined && value !== null) {\n      this._nullValue =\n        this._numberValue =\n        this._boolValue =\n        this._structValue =\n        this._listValue =\n          undefined;\n      this._kind = Value.KindCase.stringValue;\n    }\n    this._stringValue = value;\n  }\n  get boolValue(): boolean | undefined {\n    return this._boolValue;\n  }\n  set boolValue(value: boolean | undefined) {\n    if (value !== undefined && value !== null) {\n      this._nullValue =\n        this._numberValue =\n        this._stringValue =\n        this._structValue =\n        this._listValue =\n          undefined;\n      this._kind = Value.KindCase.boolValue;\n    }\n    this._boolValue = value;\n  }\n  get structValue(): Struct | undefined {\n    return this._structValue;\n  }\n  set structValue(value: Struct | undefined) {\n    if (value !== undefined && value !== null) {\n      this._nullValue =\n        this._numberValue =\n        this._stringValue =\n        this._boolValue =\n        this._listValue =\n          undefined;\n      this._kind = Value.KindCase.structValue;\n    }\n    this._structValue = value;\n  }\n  get listValue(): ListValue | undefined {\n    return this._listValue;\n  }\n  set listValue(value: ListValue | undefined) {\n    if (value !== undefined && value !== null) {\n      this._nullValue =\n        this._numberValue =\n        this._stringValue =\n        this._boolValue =\n        this._structValue =\n          undefined;\n      this._kind = Value.KindCase.listValue;\n    }\n    this._listValue = value;\n  }\n  get kind() {\n    return this._kind;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Value.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Value.AsObject {\n    return {\n      nullValue: this.nullValue,\n      numberValue: this.numberValue,\n      stringValue: this.stringValue,\n      boolValue: this.boolValue,\n      structValue: this.structValue ? this.structValue.toObject() : undefined,\n      listValue: this.listValue ? this.listValue.toObject() : undefined,\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Value.AsProtobufJSON {\n    switch (this.kind) {\n      case Value.KindCase.nullValue:\n        return null;\n      case Value.KindCase.numberValue:\n        return this.numberValue!;\n      case Value.KindCase.stringValue:\n        return this.stringValue!;\n      case Value.KindCase.boolValue:\n        return this.boolValue!;\n      case Value.KindCase.structValue:\n        return this.structValue\n          ? this.structValue.toProtobufJSON(options)\n          : null;\n      case Value.KindCase.listValue:\n        return this.listValue ? this.listValue.toProtobufJSON(options) : null;\n      default:\n        return null; // yes, according to standard should throw error, but no, it's not going to happen here\n    }\n  }\n}\nexport module Value {\n  /**\n   * Standard JavaScript object representation for Value\n   */\n  export interface AsObject {\n    nullValue?: NullValue;\n    numberValue?: number;\n    stringValue?: string;\n    boolValue?: boolean;\n    structValue?: Struct.AsObject;\n    listValue?: ListValue.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Value\n   */\n  export type AsProtobufJSON =\n    | null\n    | string\n    | number\n    | boolean\n    | Struct.AsProtobufJSON\n    | Value.AsProtobufJSON[];\n  export enum KindCase {\n    none = 0,\n    nullValue = 1,\n    numberValue = 2,\n    stringValue = 3,\n    boolValue = 4,\n    structValue = 5,\n    listValue = 6,\n  }\n}\n\n/**\n * Well known type, more at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf\n */\nexport class ListValue implements GrpcMessage {\n  static id = 'google.protobuf.ListValue';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListValue();\n    ListValue.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListValue) {\n    _instance.values = _instance.values || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListValue,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new Value();\n          _reader.readMessage(\n            messageInitializer1,\n            Value.deserializeBinaryFromReader\n          );\n          (_instance.values = _instance.values || []).push(messageInitializer1);\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListValue.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: ListValue, _writer: BinaryWriter) {\n    if (_instance.values && _instance.values.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.values as any,\n        Value.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _values?: Value[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListValue to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListValue.AsObject>) {\n    _value = _value || {};\n    this.values = (_value.values || []).map((m) => new Value(m));\n    ListValue.refineValues(this);\n  }\n  get values(): Value[] | undefined {\n    return this._values;\n  }\n  set values(value: Value[] | undefined) {\n    this._values = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListValue.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListValue.AsObject {\n    return {\n      values: (this.values || []).map((m) => m.toObject()),\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListValue.AsProtobufJSON {\n    return (this.values || []).map((v) =>\n      v ? v.toProtobufJSON(options) : null\n    );\n  }\n}\nexport module ListValue {\n  /**\n   * Standard JavaScript object representation for ListValue\n   */\n  export interface AsObject {\n    values?: Value.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListValue\n   */\n  export type AsProtobufJSON = Value.AsProtobufJSON[];\n}\n"]}