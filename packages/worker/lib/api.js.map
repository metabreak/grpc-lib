{"version":3,"file":"api.js","sourceRoot":"","sources":["../src/api.ts"],"names":[],"mappings":";;;AAIA,IAAiB,aAAa,CA8E7B;AA9ED,WAAiB,aAAa;IAC5B,IAAY,qBAKX;IALD,WAAY,qBAAqB;QAC/B,+FAAmB,CAAA;QACnB,6EAAU,CAAA;QACV,2EAAS,CAAA;QACT,+EAAW,CAAA;IACb,CAAC,EALW,qBAAqB,GAArB,mCAAqB,KAArB,mCAAqB,QAKhC;IA2BD,IAAY,gCAKX;IALD,WAAY,gCAAgC;QAC1C,yFAAK,CAAA;QACL,2FAAM,CAAA;QACN,uFAAI,CAAA;QACJ,qFAAG,CAAA;IACL,CAAC,EALW,gCAAgC,GAAhC,8CAAgC,KAAhC,8CAAgC,QAK3C;AAwCH,CAAC,EA9EgB,aAAa,GAAb,qBAAa,KAAb,qBAAa,QA8E7B","sourcesContent":["import { Error, Metadata, Status } from 'grpc-web';\nimport { GrpcWorkerClientSettings } from './client-settings';\n\n/* eslint-disable @typescript-eslint/no-namespace */\nexport namespace GrpcWorkerApi {\n  export enum GrpcWorkerMessageType {\n    serviceClientConfig,\n    rpcRequest,\n    rpcCancel,\n    rpcResponse,\n  }\n\n  export interface GrpcWorkerMessage {\n    type: GrpcWorkerMessageType;\n  }\n\n  export interface GrpcWorkerMessageServiceClientConfig\n    extends GrpcWorkerMessage {\n    type: GrpcWorkerMessageType.serviceClientConfig;\n    serviceId: string;\n    settings: GrpcWorkerClientSettings;\n  }\n\n  export interface GrpcWorkerMessageRPCRequest<Q> extends GrpcWorkerMessage {\n    type: GrpcWorkerMessageType.rpcRequest;\n    id: number;\n    serviceId: string;\n    path: string;\n    request: Q;\n    metadata: Metadata;\n  }\n\n  export interface GrpcWorkerMessageRPCCancel extends GrpcWorkerMessage {\n    type: GrpcWorkerMessageType.rpcCancel;\n    id: number;\n  }\n\n  export enum GrpcWorkerMessageRPCResponseType {\n    error,\n    status,\n    data,\n    end,\n  }\n\n  export interface GrpcWorkerMessageRPCResponseBase<S>\n    extends GrpcWorkerMessage {\n    type: GrpcWorkerMessageType.rpcResponse;\n    id: number;\n    // responseType: GrpcWorkerMessageRPCResponseType;\n    // error?: Error;\n    // status?: Status;\n    // response?: S;\n  }\n  export interface GrpcWorkerMessageRPCResponseError<S>\n    extends GrpcWorkerMessageRPCResponseBase<S> {\n    responseType: GrpcWorkerMessageRPCResponseType.error;\n    error: Error;\n  }\n  export interface GrpcWorkerMessageRPCResponseStatus<S>\n    extends GrpcWorkerMessageRPCResponseBase<S> {\n    responseType: GrpcWorkerMessageRPCResponseType.status;\n    status: Status;\n  }\n  export interface GrpcWorkerMessageRPCResponseData<S>\n    extends GrpcWorkerMessageRPCResponseBase<S> {\n    responseType: GrpcWorkerMessageRPCResponseType.data;\n    response: S;\n  }\n  export interface GrpcWorkerMessageRPCResponseEnd<S>\n    extends GrpcWorkerMessageRPCResponseBase<S> {\n    responseType: GrpcWorkerMessageRPCResponseType.end;\n  }\n\n  export type GrpcWorkerMessageRPCResponse<S> =\n    | GrpcWorkerMessageRPCResponseError<S>\n    | GrpcWorkerMessageRPCResponseData<S>\n    | GrpcWorkerMessageRPCResponseStatus<S>\n    | GrpcWorkerMessageRPCResponseEnd<S>;\n\n  export interface WorkerMessageEvent<D> extends Event {\n    data: D;\n  }\n}\n"]}