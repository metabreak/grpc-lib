{"version":3,"file":"grpc-message-pool.js","sourceRoot":"","sources":["../src/grpc-message-pool.ts"],"names":[],"mappings":";;;AAOA,MAAa,eAAe;IAI1B,YAAY,QAAyC;QAF7C,UAAK,GAAG,IAAI,GAAG,EAAyC,CAAC;QAG/D,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACrB,CAAC;IAED,GAAG,CAAC,QAAyC;QAC3C,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,GAAG,CAAC,EAAU;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC;CAEF;AAhBD,0CAgBC","sourcesContent":["import { GrpcMessage } from './grpc-message';\nimport { GrpcMessageClass } from './grpc-message-class';\n\n/**\n * A message pool for using with `google.protobuf.Any`.\n * Pass the array of messages to be registered within the pool and give this pool to `toProtobufJSON` or to `unpack`.\n */\nexport class GrpcMessagePool {\n\n  private index = new Map<string, GrpcMessageClass<GrpcMessage>>();\n\n  constructor(messages: GrpcMessageClass<GrpcMessage>[]) {\n    this.add(messages);\n  }\n\n  add(messages: GrpcMessageClass<GrpcMessage>[]) {\n    messages.forEach(m => this.index.set(m.id, m));\n  }\n\n  get(id: string) {\n    return this.index.get(id);\n  }\n\n}\n"]}